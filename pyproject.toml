[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hostaway-mcp"
version = "0.1.0"
description = "MCP server for Hostaway property management API"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "email-validator>=2.3.0",
    "fastapi>=0.100.0",
    "fastapi-mcp>=0.4.0",
    "httpx>=0.27.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-json-logger>=4.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[dependency-groups]
dev = [
    "aiolimiter>=1.2.1",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.14.0",
    "tenacity>=9.1.2",
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "EM",   # flake8-errmsg
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "PIE",  # flake8-pie
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
    "PL",   # pylint
    "RUF",  # ruff-specific rules
]
ignore = [
    "PLR0913",  # Too many arguments in function definition
    "PLR2004",  # Magic value used in comparison
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true
disallow_untyped_defs = true
disallow_any_unimported = false
disallow_any_explicit = false
check_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
markers = [
    "e2e: End-to-end integration tests",
    "performance: Performance and load tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/.venv/*",
    "src/api/main.py",  # Integration/lifecycle code - tested separately
    "src/mcp/server.py",  # MCP server instance - not unit testable
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
